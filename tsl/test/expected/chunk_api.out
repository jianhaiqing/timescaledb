-- This file and its contents are licensed under the Timescale License.
-- Please see the included NOTICE for copyright information and
-- LICENSE-TIMESCALE for a copy of the license.
\c :TEST_DBNAME :ROLE_SUPERUSER
GRANT CREATE ON DATABASE :TEST_DBNAME TO :ROLE_DEFAULT_PERM_USER;
SET ROLE :ROLE_DEFAULT_PERM_USER;
CREATE SCHEMA "ChunkSchema";
CREATE TABLE chunkapi (time timestamptz, device int, temp float);
SELECT * FROM create_hypertable('chunkapi', 'time', 'device', 2);
NOTICE:  adding not-null constraint to column "time"
 hypertable_id | schema_name | table_name | created 
---------------+-------------+------------+---------
             1 | public      | chunkapi   | t
(1 row)

INSERT INTO chunkapi VALUES ('2018-01-01 05:00:00-8', 1, 23.4);
SELECT (_timescaledb_internal.show_chunk(show_chunks)).*
FROM show_chunks('chunkapi');
 chunk_id | hypertable_id |      schema_name      |    table_name    | relkind |                                            slices                                            
----------+---------------+-----------------------+------------------+---------+----------------------------------------------------------------------------------------------
        1 |             1 | _timescaledb_internal | _hyper_1_1_chunk | r       | {"time": [1514419200000000, 1515024000000000], "device": [-9223372036854775808, 1073741823]}
(1 row)

-- Creating a chunk with the constraints of an existing chunk should
-- return the existing chunk
SELECT * FROM _timescaledb_internal.create_chunk('chunkapi',' {"time": [1514419200000000, 1515024000000000], "device": [-9223372036854775808, 1073741823]}');
 chunk_id | hypertable_id |      schema_name      |    table_name    | relkind |                                            slices                                            | created 
----------+---------------+-----------------------+------------------+---------+----------------------------------------------------------------------------------------------+---------
        1 |             1 | _timescaledb_internal | _hyper_1_1_chunk | r       | {"time": [1514419200000000, 1515024000000000], "device": [-9223372036854775808, 1073741823]} | f
(1 row)

\set VERBOSITY default
\set ON_ERROR_STOP 0
-- Modified time constraint should fail with collision
SELECT * FROM _timescaledb_internal.create_chunk('chunkapi',' {"time": [1514419600000000, 1515024000000000], "device": [-9223372036854775808, 1073741823]}');
ERROR:  chunk creation failed due to collision
-- Missing dimension
SELECT * FROM _timescaledb_internal.create_chunk('chunkapi',' {"time": [1514419600000000, 1515024000000000]}');
ERROR:  invalid hypercube for hypertable "chunkapi"
DETAIL:  invalid number of hypercube dimensions
-- Extra dimension
SELECT * FROM _timescaledb_internal.create_chunk('chunkapi',' {"time": [1514419600000000, 1515024000000000],  "device": [-9223372036854775808, 1073741823], "time2": [1514419600000000, 1515024000000000]}');
ERROR:  invalid hypercube for hypertable "chunkapi"
DETAIL:  invalid number of hypercube dimensions
-- Bad dimension name
SELECT * FROM _timescaledb_internal.create_chunk('chunkapi',' {"time": [1514419600000000, 1515024000000000],  "dev": [-9223372036854775808, 1073741823]}');
ERROR:  invalid hypercube for hypertable "chunkapi"
DETAIL:  dimension "dev" does not exist in hypertable
-- Same dimension twice
SELECT * FROM _timescaledb_internal.create_chunk('chunkapi',' {"time": [1514419600000000, 1515024000000000], "time": [1514419600000000, 1515024000000000]}');
ERROR:  invalid hypercube for hypertable "chunkapi"
DETAIL:  invalid number of hypercube dimensions
-- Bad bounds format
SELECT * FROM _timescaledb_internal.create_chunk('chunkapi',' {"time": ["1514419200000000", 1515024000000000], "device": [-9223372036854775808, 1073741823]}');
ERROR:  invalid hypercube for hypertable "chunkapi"
DETAIL:  constraint for dimension "time" is not numeric
-- Bad slices format
SELECT * FROM _timescaledb_internal.create_chunk('chunkapi',' {"time": [1515024000000000], "device": [-9223372036854775808, 1073741823]}');
ERROR:  invalid hypercube for hypertable "chunkapi"
DETAIL:  unexpected number of dimensional bounds for dimension "time"
-- Bad slices json
SELECT * FROM _timescaledb_internal.create_chunk('chunkapi',' {"time: [1515024000000000] "device": [-9223372036854775808, 1073741823]}');
ERROR:  invalid input syntax for type json
LINE 1: ...ROM _timescaledb_internal.create_chunk('chunkapi',' {"time: ...
                                                             ^
DETAIL:  Token "device" is invalid.
CONTEXT:  JSON data, line 1:  {"time: [1515024000000000] "device...
-- Valid chunk, but no permissions
SET ROLE :ROLE_DEFAULT_PERM_USER_2;
SELECT * FROM _timescaledb_internal.create_chunk('chunkapi',' {"time": [1515024000000000, 1519024000000000], "device": [-9223372036854775808, 1073741823]}', 'ChunkSchema', 'My_chunk_Table_name');
ERROR:  must be owner of hypertable "chunkapi"
SET ROLE :ROLE_DEFAULT_PERM_USER;
\set ON_ERROR_STOP 1
\set VERBOSITY terse
-- Create a chunk that does not collide and with custom schema and name
SELECT * FROM _timescaledb_internal.create_chunk('chunkapi',' {"time": [1515024000000000, 1519024000000000], "device": [-9223372036854775808, 1073741823]}', 'ChunkSchema', 'My_chunk_Table_name');
 chunk_id | hypertable_id | schema_name |     table_name      | relkind |                                            slices                                            | created 
----------+---------------+-------------+---------------------+---------+----------------------------------------------------------------------------------------------+---------
        2 |             1 | ChunkSchema | My_chunk_Table_name | r       | {"time": [1515024000000000, 1519024000000000], "device": [-9223372036854775808, 1073741823]} | t
(1 row)

SELECT (_timescaledb_internal.show_chunk(show_chunks)).*
FROM show_chunks('chunkapi');
 chunk_id | hypertable_id |      schema_name      |     table_name      | relkind |                                            slices                                            
----------+---------------+-----------------------+---------------------+---------+----------------------------------------------------------------------------------------------
        1 |             1 | _timescaledb_internal | _hyper_1_1_chunk    | r       | {"time": [1514419200000000, 1515024000000000], "device": [-9223372036854775808, 1073741823]}
        2 |             1 | ChunkSchema           | My_chunk_Table_name | r       | {"time": [1515024000000000, 1519024000000000], "device": [-9223372036854775808, 1073741823]}
(2 rows)

-- Show the new chunks
\dt public.*
               List of relations
 Schema |   Name   | Type  |       Owner       
--------+----------+-------+-------------------
 public | chunkapi | table | default_perm_user
(1 row)

\dt "ChunkSchema".*
                       List of relations
   Schema    |        Name         | Type  |       Owner       
-------------+---------------------+-------+-------------------
 ChunkSchema | My_chunk_Table_name | table | default_perm_user
(1 row)

-- Test getting relation stats for chunk.  First get stats
-- chunk-by-chunk. Note that the table isn't ANALYZED, so no stats
-- present yet.
SELECT (_timescaledb_internal.get_chunk_relstats(show_chunks)).*
FROM show_chunks('chunkapi');
 chunk_id | hypertable_id | num_pages | num_tuples | num_allvisible 
----------+---------------+-----------+------------+----------------
        1 |             1 |         0 |          0 |              0
        2 |             1 |         0 |          0 |              0
(2 rows)

-- Get the same stats but by giving the hypertable as input
SELECT * FROM _timescaledb_internal.get_chunk_relstats('chunkapi');
 chunk_id | hypertable_id | num_pages | num_tuples | num_allvisible 
----------+---------------+-----------+------------+----------------
        1 |             1 |         0 |          0 |              0
        2 |             1 |         0 |          0 |              0
(2 rows)

-- Show stats after analyze
ANALYZE chunkapi;
SELECT * FROM _timescaledb_internal.get_chunk_relstats('chunkapi');
 chunk_id | hypertable_id | num_pages | num_tuples | num_allvisible 
----------+---------------+-----------+------------+----------------
        1 |             1 |         1 |          1 |              0
        2 |             1 |         0 |          0 |              0
(2 rows)

-- Test getting chunk stats on a distribute hypertable
SET ROLE :ROLE_CLUSTER_SUPERUSER;
SET client_min_messages TO ERROR;
DROP DATABASE IF EXISTS data_node_1;
DROP DATABASE IF EXISTS data_node_2;
SET client_min_messages TO NOTICE;
SELECT * FROM add_data_node('data_node_1', host => 'localhost',
                            database => 'data_node_1');
  node_name  |   host    | port  |  database   | node_created | database_created | extension_created 
-------------+-----------+-------+-------------+--------------+------------------+-------------------
 data_node_1 | localhost | 15432 | data_node_1 | t            | t                | t
(1 row)

SELECT * FROM add_data_node('data_node_2', host => 'localhost',
                            database => 'data_node_2');
  node_name  |   host    | port  |  database   | node_created | database_created | extension_created 
-------------+-----------+-------+-------------+--------------+------------------+-------------------
 data_node_2 | localhost | 15432 | data_node_2 | t            | t                | t
(1 row)

GRANT USAGE
   ON FOREIGN SERVER data_node_1, data_node_2
   TO :ROLE_1;
SET ROLE :ROLE_1;
CREATE TABLE disttable (time timestamptz, device int, temp float);
SELECT * FROM create_distributed_hypertable('disttable', 'time', 'device');
NOTICE:  adding not-null constraint to column "time"
 hypertable_id | schema_name | table_name | created 
---------------+-------------+------------+---------
             2 | public      | disttable  | t
(1 row)

INSERT INTO disttable VALUES ('2018-01-01 05:00:00-8', 1, 23.4),
                             ('2018-01-01 06:00:00-8', 4, 22.3),
                             ('2018-01-01 06:00:00-8', 1, 21.1);
-- No stats on the local table
SELECT * FROM _timescaledb_internal.get_chunk_relstats('disttable');
 chunk_id | hypertable_id | num_pages | num_tuples | num_allvisible 
----------+---------------+-----------+------------+----------------
        3 |             2 |         0 |          0 |              0
        4 |             2 |         0 |          0 |              0
(2 rows)

-- Run ANALYZE on data node 1
SELECT * FROM distributed_exec('ANALYZE disttable', '{ "data_node_1" }');
 distributed_exec 
------------------
 
(1 row)

-- Stats should now be refreshed locally
SELECT * FROM _timescaledb_internal.get_chunk_relstats('disttable');
 chunk_id | hypertable_id | num_pages | num_tuples | num_allvisible 
----------+---------------+-----------+------------+----------------
        3 |             2 |         1 |          2 |              0
        4 |             2 |         0 |          0 |              0
(2 rows)

-- Run ANALYZE again, but on both nodes
SELECT * FROM distributed_exec('ANALYZE disttable');
 distributed_exec 
------------------
 
(1 row)

-- Now expect stats from all data node chunks
SELECT * FROM _timescaledb_internal.get_chunk_relstats('disttable');
 chunk_id | hypertable_id | num_pages | num_tuples | num_allvisible 
----------+---------------+-----------+------------+----------------
        3 |             2 |         1 |          2 |              0
        4 |             2 |         1 |          1 |              0
(2 rows)

RESET ROLE;
-- Clean up
TRUNCATE disttable;
SELECT * FROM delete_data_node('data_node_1', force => true);
 delete_data_node 
------------------
 t
(1 row)

SELECT * FROM delete_data_node('data_node_2', force => true);
WARNING:  new data for hypertable "disttable" will be under-replicated due to deleting data node "data_node_2"
 delete_data_node 
------------------
 t
(1 row)

DROP DATABASE data_node_1;
DROP DATABASE data_node_2;
