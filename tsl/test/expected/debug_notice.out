-- This file and its contents are licensed under the Timescale License.
-- Please see the included NOTICE for copyright information and
-- LICENSE-TIMESCALE for a copy of the license.
-- This test suite is not intended to check the output of the queries
-- but rather make sure that they are generated when certain flags are
-- enabled or disabled.
--
-- The queries below are triggering a call to `tsl_set_rel_pathlist`
-- and `get_foreign_upper_paths` respectively, but if that changes,
-- they might need to be changed.
\c :TEST_DBNAME :ROLE_CLUSTER_SUPERUSER
-- Cleanup from other potential tests that created these databases
SET client_min_messages TO ERROR;
DROP DATABASE IF EXISTS data_node_1;
DROP DATABASE IF EXISTS data_node_2;
DROP DATABASE IF EXISTS data_node_3;
SET client_min_messages TO NOTICE;
-- Add data nodes using the TimescaleDB node management API
SELECT * FROM add_data_node('data_node_1', host => 'localhost', database => 'data_node_1');
  node_name  |   host    | port  |  database   | node_created | database_created | extension_created 
-------------+-----------+-------+-------------+--------------+------------------+-------------------
 data_node_1 | localhost | 15432 | data_node_1 | t            | t                | t
(1 row)

SELECT * FROM add_data_node('data_node_2', host => 'localhost', database => 'data_node_2');
  node_name  |   host    | port  |  database   | node_created | database_created | extension_created 
-------------+-----------+-------+-------------+--------------+------------------+-------------------
 data_node_2 | localhost | 15432 | data_node_2 | t            | t                | t
(1 row)

SELECT * FROM add_data_node('data_node_3', host => 'localhost', database => 'data_node_3');
  node_name  |   host    | port  |  database   | node_created | database_created | extension_created 
-------------+-----------+-------+-------------+--------------+------------------+-------------------
 data_node_3 | localhost | 15432 | data_node_3 | t            | t                | t
(1 row)

GRANT USAGE ON FOREIGN SERVER data_node_1, data_node_2, data_node_3 TO PUBLIC;
CREATE TABLE hyper (time timestamptz, device int, location int, temp float);
SELECT * FROM create_distributed_hypertable('hyper', 'time', 'device');
NOTICE:  adding not-null constraint to column "time"
 hypertable_id | schema_name | table_name | created 
---------------+-------------+------------+---------
             1 | public      | hyper      | t
(1 row)

SET enable_partitionwise_aggregate = ON;
INSERT INTO hyper VALUES
       ('2018-01-19 13:01', 1, 2, 2.3),
       ('2018-01-20 15:05', 1, 3, 5.3),
       ('2018-02-21 13:01', 3, 4, 1.5),
       ('2018-02-28 15:05', 1, 1, 5.6),
       ('2018-02-19 13:02', 3, 5, 3.1),
       ('2018-02-19 13:02', 2, 3, 6.7),
       ('2018-03-08 11:05', 6, 2, 8.1),
       ('2018-03-08 11:05', 7, 4, 4.6),
       ('2018-03-10 17:02', 5, 5, 5.1),
       ('2018-03-10 17:02', 1, 6, 9.1),
       ('2018-03-17 12:02', 2, 2, 6.7),
       ('2018-04-19 13:01', 1, 2, 7.6),
       ('2018-04-20 15:08', 5, 5, 6.4),
       ('2018-05-19 13:01', 4, 4, 5.1),
       ('2018-05-20 15:08', 5, 1, 9.4),
       ('2018-05-30 13:02', 3, 2, 9.0);
-- Optimizer debug messages shown at debug level 2
SET client_min_messages TO DEBUG2;
-- Turning on show_rel should show a message
SET timescaledb.debug_optimizer_flags = 'show_rel';
SHOW timescaledb.debug_optimizer_flags;
 timescaledb.debug_optimizer_flags 
-----------------------------------
 show_rel
(1 row)

SELECT time, device, avg(temp) AS temp
FROM hyper
WHERE time BETWEEN '2018-04-19 00:01' AND '2018-06-01 00:00'
GROUP BY 1, 2
HAVING avg(temp) > 4
ORDER BY 1, 2;
DEBUG:  In tsl_set_rel_pathlist:
RELOPTINFO (hyper): rows=36 width=20
	path list:
	Append [parents: hyper] rows=37 cost=100.00..412.58
		CustomScan (DataNodeScanPath) [parents: hyper] rows=9 cost=100.00..128.09
		CustomScan (DataNodeScanPath) [parents: hyper] rows=19 cost=100.00..156.21
		CustomScan (DataNodeScanPath) [parents: hyper] rows=9 cost=100.00..128.09
	MergeAppend [parents: hyper] rows=37 cost=300.02..418.48 has pathkeys
		CustomScan (DataNodeScanPath) [parents: hyper] rows=9 cost=100.00..129.49 has pathkeys
		CustomScan (DataNodeScanPath) [parents: hyper] rows=19 cost=100.00..159.00 has pathkeys
		CustomScan (DataNodeScanPath) [parents: hyper] rows=9 cost=100.00..129.49 has pathkeys


             time             | device | temp 
------------------------------+--------+------
 Thu Apr 19 13:01:00 2018 PDT |      1 |  7.6
 Fri Apr 20 15:08:00 2018 PDT |      5 |  6.4
 Sat May 19 13:01:00 2018 PDT |      4 |  5.1
 Sun May 20 15:08:00 2018 PDT |      5 |  9.4
 Wed May 30 13:02:00 2018 PDT |      3 |    9
(5 rows)

-- Turning off the show_rel (and turning on another flag) should not
-- show a notice on the relations, but show the upper paths.
SET timescaledb.debug_optimizer_flags = 'show_upper=*';
SHOW timescaledb.debug_optimizer_flags;
 timescaledb.debug_optimizer_flags 
-----------------------------------
 show_upper=*
(1 row)

SELECT time, device, avg(temp) AS temp
FROM hyper
WHERE time BETWEEN '2018-04-19 00:01' AND '2018-06-01 00:00'
GROUP BY 1, 2
HAVING avg(temp) > 4
ORDER BY 1, 2;
DEBUG:  Stage GROUP_AGG in get_foreign_upper_paths:
RELOPTINFO (hyper): rows=0 width=20
	path list:
	CustomScan (DataNodeScanPath) [parents: hyper] rows=9 cost=100.09..128.32
	Agg [parents: hyper] rows=3 cost=128.18..128.34
		CustomScan (DataNodeScanPath) [parents: hyper] rows=9 cost=100.00..128.09
	CustomScan (DataNodeScanPath) [parents: hyper] rows=0 cost=100.09..129.73 has pathkeys


DEBUG:  Stage GROUP_AGG in get_foreign_upper_paths:
RELOPTINFO (hyper): rows=0 width=20
	path list:
	CustomScan (DataNodeScanPath) [parents: hyper] rows=19 cost=100.19..156.69
	Agg [parents: hyper] rows=6 cost=156.61..157.18 has pathkeys
		Sort [parents: hyper] rows=19 cost=156.61..156.66 has pathkeys
			CustomScan (DataNodeScanPath) [parents: hyper] rows=19 cost=100.00..156.21
	CustomScan (DataNodeScanPath) [parents: hyper] rows=0 cost=100.20..159.50 has pathkeys


DEBUG:  Stage GROUP_AGG in get_foreign_upper_paths:
RELOPTINFO (hyper): rows=0 width=20
	path list:
	CustomScan (DataNodeScanPath) [parents: hyper] rows=9 cost=100.09..128.32
	Agg [parents: hyper] rows=3 cost=128.18..128.34
		CustomScan (DataNodeScanPath) [parents: hyper] rows=9 cost=100.00..128.09
	CustomScan (DataNodeScanPath) [parents: hyper] rows=0 cost=100.09..129.73 has pathkeys


             time             | device | temp 
------------------------------+--------+------
 Thu Apr 19 13:01:00 2018 PDT |      1 |  7.6
 Fri Apr 20 15:08:00 2018 PDT |      5 |  6.4
 Sat May 19 13:01:00 2018 PDT |      4 |  5.1
 Sun May 20 15:08:00 2018 PDT |      5 |  9.4
 Wed May 30 13:02:00 2018 PDT |      3 |    9
(5 rows)

-- Turning off both relations should not show anything.
RESET timescaledb.debug_optimizer_flags;
SHOW timescaledb.debug_optimizer_flags;
 timescaledb.debug_optimizer_flags 
-----------------------------------
 
(1 row)

SELECT time, device, avg(temp) AS temp
FROM hyper
WHERE time BETWEEN '2018-04-19 00:01' AND '2018-06-01 00:00'
GROUP BY 1, 2
HAVING avg(temp) > 4
ORDER BY 1, 2;
             time             | device | temp 
------------------------------+--------+------
 Thu Apr 19 13:01:00 2018 PDT |      1 |  7.6
 Fri Apr 20 15:08:00 2018 PDT |      5 |  6.4
 Sat May 19 13:01:00 2018 PDT |      4 |  5.1
 Sun May 20 15:08:00 2018 PDT |      5 |  9.4
 Wed May 30 13:02:00 2018 PDT |      3 |    9
(5 rows)

