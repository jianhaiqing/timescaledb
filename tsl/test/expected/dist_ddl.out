-- This file and its contents are licensed under the Timescale License.
-- Please see the included NOTICE for copyright information and
-- LICENSE-TIMESCALE for a copy of the license.
-- Need to be super user to create extension and add data nodes
\c :TEST_DBNAME :ROLE_SUPERUSER;
-- Support for execute_sql_and_filter_server_name_on_error()
\unset ECHO
psql:include/remote_exec.sql:5: NOTICE:  schema "test" already exists, skipping
psql:include/filter_exec.sql:5: NOTICE:  schema "test" already exists, skipping
-- Cleanup from other potential tests that created these databases
SET client_min_messages TO ERROR;
DROP DATABASE IF EXISTS data_node_1;
DROP DATABASE IF EXISTS data_node_2;
DROP DATABASE IF EXISTS data_node_3;
SET client_min_messages TO NOTICE;
SET ROLE :ROLE_DEFAULT_CLUSTER_USER;
SELECT * FROM add_data_node('data_node_1',
                            database => 'data_node_1',
                            password => :'ROLE_DEFAULT_CLUSTER_USER_PASS',
                            bootstrap_user => :'ROLE_CLUSTER_SUPERUSER',
                            bootstrap_password => :'ROLE_CLUSTER_SUPERUSER_PASS');
NOTICE:  adding user mapping for "default_cluster_user" to connect to "data_node_1"
  node_name  |   host    | port  |  database   | node_created | database_created | extension_created 
-------------+-----------+-------+-------------+--------------+------------------+-------------------
 data_node_1 | localhost | 15432 | data_node_1 | t            | t                | t
(1 row)

SELECT * FROM add_data_node('data_node_2',
                            database => 'data_node_2',
                            password => :'ROLE_DEFAULT_CLUSTER_USER_PASS',
                            bootstrap_user => :'ROLE_CLUSTER_SUPERUSER',
                            bootstrap_password => :'ROLE_CLUSTER_SUPERUSER_PASS');
NOTICE:  adding user mapping for "default_cluster_user" to connect to "data_node_2"
  node_name  |   host    | port  |  database   | node_created | database_created | extension_created 
-------------+-----------+-------+-------------+--------------+------------------+-------------------
 data_node_2 | localhost | 15432 | data_node_2 | t            | t                | t
(1 row)

SELECT * FROM add_data_node('data_node_3',
                            database => 'data_node_3',
                            password => :'ROLE_DEFAULT_CLUSTER_USER_PASS',
                            bootstrap_user => :'ROLE_CLUSTER_SUPERUSER',
                            bootstrap_password => :'ROLE_CLUSTER_SUPERUSER_PASS');
NOTICE:  adding user mapping for "default_cluster_user" to connect to "data_node_3"
  node_name  |   host    | port  |  database   | node_created | database_created | extension_created 
-------------+-----------+-------+-------------+--------------+------------------+-------------------
 data_node_3 | localhost | 15432 | data_node_3 | t            | t                | t
(1 row)

-- Import testsupport.sql file to data nodes
\unset ECHO
-- This SCHEMA will not be created on data nodes
CREATE SCHEMA disttable_schema AUTHORIZATION :ROLE_DEFAULT_CLUSTER_USER;
CREATE SCHEMA some_schema AUTHORIZATION :ROLE_DEFAULT_CLUSTER_USER;
SET ROLE :ROLE_DEFAULT_CLUSTER_USER;
CREATE TABLE disttable(time timestamptz, device int, color int CONSTRAINT color_check CHECK (color > 0), temp float);
CREATE UNIQUE INDEX disttable_pk ON disttable(time);
-- CREATE TABLE
SELECT * FROM create_hypertable('disttable', 'time', replication_factor => 3);
NOTICE:  adding not-null constraint to column "time"
 hypertable_id | schema_name | table_name | created 
---------------+-------------+------------+---------
             1 | public      | disttable  | t
(1 row)

SELECT * FROM test.show_columns('disttable');
 Column |           Type           | NotNull 
--------+--------------------------+---------
 time   | timestamp with time zone | t
 device | integer                  | f
 color  | integer                  | f
 temp   | double precision         | f
(4 rows)

SELECT * FROM test.show_constraints('disttable');
 Constraint  | Type | Columns | Index |    Expr     | Deferrable | Deferred | Validated 
-------------+------+---------+-------+-------------+------------+----------+-----------
 color_check | c    | {color} | -     | (color > 0) | f          | f        | t
(1 row)

SELECT * FROM test.show_indexes('disttable');
    Index     | Columns | Expr | Unique | Primary | Exclusion | Tablespace 
--------------+---------+------+--------+---------+-----------+------------
 disttable_pk | {time}  |      | t      | f       | f         | 
(1 row)

SELECT * FROM test.show_triggers('disttable');
      Trigger      | Type |               Function               
-------------------+------+--------------------------------------
 ts_insert_blocker |    7 | _timescaledb_internal.insert_blocker
(1 row)

SELECT * FROM test.remote_exec(NULL, $$
SELECT * FROM test.show_columns('disttable');
SELECT * FROM test.show_constraints('disttable');
SELECT * FROM test.show_indexes('disttable');
SELECT * FROM test.show_triggers('disttable');
$$);
NOTICE:  [data_node_1]: 
SELECT * FROM test.show_columns('disttable')
NOTICE:  [data_node_1]:
Column|Type                    |NotNull
------+------------------------+-------
time  |timestamp with time zone|t      
device|integer                 |f      
color |integer                 |f      
temp  |double precision        |f      
(4 rows)


NOTICE:  [data_node_1]: 
SELECT * FROM test.show_constraints('disttable')
NOTICE:  [data_node_1]:
Constraint |Type|Columns|Index|Expr       |Deferrable|Deferred|Validated
-----------+----+-------+-----+-----------+----------+--------+---------
color_check|c   |{color}|-    |(color > 0)|f         |f       |t        
(1 row)


NOTICE:  [data_node_1]: 
SELECT * FROM test.show_indexes('disttable')
NOTICE:  [data_node_1]:
Index       |Columns|Expr|Unique|Primary|Exclusion|Tablespace
------------+-------+----+------+-------+---------+----------
disttable_pk|{time} |    |t     |f      |f        |          
(1 row)


NOTICE:  [data_node_1]: 
SELECT * FROM test.show_triggers('disttable')
NOTICE:  [data_node_1]:
Trigger          |Type|Function                            
-----------------+----+------------------------------------
ts_insert_blocker|   7|_timescaledb_internal.insert_blocker
(1 row)


NOTICE:  [data_node_2]: 
SELECT * FROM test.show_columns('disttable')
NOTICE:  [data_node_2]:
Column|Type                    |NotNull
------+------------------------+-------
time  |timestamp with time zone|t      
device|integer                 |f      
color |integer                 |f      
temp  |double precision        |f      
(4 rows)


NOTICE:  [data_node_2]: 
SELECT * FROM test.show_constraints('disttable')
NOTICE:  [data_node_2]:
Constraint |Type|Columns|Index|Expr       |Deferrable|Deferred|Validated
-----------+----+-------+-----+-----------+----------+--------+---------
color_check|c   |{color}|-    |(color > 0)|f         |f       |t        
(1 row)


NOTICE:  [data_node_2]: 
SELECT * FROM test.show_indexes('disttable')
NOTICE:  [data_node_2]:
Index       |Columns|Expr|Unique|Primary|Exclusion|Tablespace
------------+-------+----+------+-------+---------+----------
disttable_pk|{time} |    |t     |f      |f        |          
(1 row)


NOTICE:  [data_node_2]: 
SELECT * FROM test.show_triggers('disttable')
NOTICE:  [data_node_2]:
Trigger          |Type|Function                            
-----------------+----+------------------------------------
ts_insert_blocker|   7|_timescaledb_internal.insert_blocker
(1 row)


NOTICE:  [data_node_3]: 
SELECT * FROM test.show_columns('disttable')
NOTICE:  [data_node_3]:
Column|Type                    |NotNull
------+------------------------+-------
time  |timestamp with time zone|t      
device|integer                 |f      
color |integer                 |f      
temp  |double precision        |f      
(4 rows)


NOTICE:  [data_node_3]: 
SELECT * FROM test.show_constraints('disttable')
NOTICE:  [data_node_3]:
Constraint |Type|Columns|Index|Expr       |Deferrable|Deferred|Validated
-----------+----+-------+-----+-----------+----------+--------+---------
color_check|c   |{color}|-    |(color > 0)|f         |f       |t        
(1 row)


NOTICE:  [data_node_3]: 
SELECT * FROM test.show_indexes('disttable')
NOTICE:  [data_node_3]:
Index       |Columns|Expr|Unique|Primary|Exclusion|Tablespace
------------+-------+----+------+-------+---------+----------
disttable_pk|{time} |    |t     |f      |f        |          
(1 row)


NOTICE:  [data_node_3]: 
SELECT * FROM test.show_triggers('disttable')
NOTICE:  [data_node_3]:
Trigger          |Type|Function                            
-----------------+----+------------------------------------
ts_insert_blocker|   7|_timescaledb_internal.insert_blocker
(1 row)


 remote_exec 
-------------
 
(1 row)

-- ADD CONSTRAINT
ALTER TABLE disttable ADD CONSTRAINT device_check CHECK (device > 0);
SELECT * FROM test.show_constraints('disttable');
  Constraint  | Type | Columns  | Index |     Expr     | Deferrable | Deferred | Validated 
--------------+------+----------+-------+--------------+------------+----------+-----------
 color_check  | c    | {color}  | -     | (color > 0)  | f          | f        | t
 device_check | c    | {device} | -     | (device > 0) | f          | f        | t
(2 rows)

SELECT * FROM test.remote_exec(NULL, $$ SELECT * FROM test.show_constraints('disttable') $$);
NOTICE:  [data_node_1]:  SELECT * FROM test.show_constraints('disttable') 
NOTICE:  [data_node_1]:
Constraint  |Type|Columns |Index|Expr        |Deferrable|Deferred|Validated
------------+----+--------+-----+------------+----------+--------+---------
color_check |c   |{color} |-    |(color > 0) |f         |f       |t        
device_check|c   |{device}|-    |(device > 0)|f         |f       |t        
(2 rows)


NOTICE:  [data_node_2]:  SELECT * FROM test.show_constraints('disttable') 
NOTICE:  [data_node_2]:
Constraint  |Type|Columns |Index|Expr        |Deferrable|Deferred|Validated
------------+----+--------+-----+------------+----------+--------+---------
color_check |c   |{color} |-    |(color > 0) |f         |f       |t        
device_check|c   |{device}|-    |(device > 0)|f         |f       |t        
(2 rows)


NOTICE:  [data_node_3]:  SELECT * FROM test.show_constraints('disttable') 
NOTICE:  [data_node_3]:
Constraint  |Type|Columns |Index|Expr        |Deferrable|Deferred|Validated
------------+----+--------+-----+------------+----------+--------+---------
color_check |c   |{color} |-    |(color > 0) |f         |f       |t        
device_check|c   |{device}|-    |(device > 0)|f         |f       |t        
(2 rows)


 remote_exec 
-------------
 
(1 row)

-- DROP CONSTRAINT
ALTER TABLE disttable DROP CONSTRAINT device_check;
SELECT * FROM test.show_constraints('disttable');
 Constraint  | Type | Columns | Index |    Expr     | Deferrable | Deferred | Validated 
-------------+------+---------+-------+-------------+------------+----------+-----------
 color_check | c    | {color} | -     | (color > 0) | f          | f        | t
(1 row)

SELECT * FROM test.remote_exec(NULL, $$ SELECT * FROM test.show_constraints('disttable') $$);
NOTICE:  [data_node_1]:  SELECT * FROM test.show_constraints('disttable') 
NOTICE:  [data_node_1]:
Constraint |Type|Columns|Index|Expr       |Deferrable|Deferred|Validated
-----------+----+-------+-----+-----------+----------+--------+---------
color_check|c   |{color}|-    |(color > 0)|f         |f       |t        
(1 row)


NOTICE:  [data_node_2]:  SELECT * FROM test.show_constraints('disttable') 
NOTICE:  [data_node_2]:
Constraint |Type|Columns|Index|Expr       |Deferrable|Deferred|Validated
-----------+----+-------+-----+-----------+----------+--------+---------
color_check|c   |{color}|-    |(color > 0)|f         |f       |t        
(1 row)


NOTICE:  [data_node_3]:  SELECT * FROM test.show_constraints('disttable') 
NOTICE:  [data_node_3]:
Constraint |Type|Columns|Index|Expr       |Deferrable|Deferred|Validated
-----------+----+-------+-----+-----------+----------+--------+---------
color_check|c   |{color}|-    |(color > 0)|f         |f       |t        
(1 row)


 remote_exec 
-------------
 
(1 row)

-- DROP CONSTRAINT pre-created
ALTER TABLE disttable DROP CONSTRAINT color_check;
SELECT * FROM test.remote_exec(NULL, $$ SELECT * FROM test.show_constraints('disttable') $$);
NOTICE:  [data_node_1]:  SELECT * FROM test.show_constraints('disttable') 
NOTICE:  [data_node_1]:
Constraint|Type|Columns|Index|Expr|Deferrable|Deferred|Validated
----------+----+-------+-----+----+----------+--------+---------
(0 rows)


NOTICE:  [data_node_2]:  SELECT * FROM test.show_constraints('disttable') 
NOTICE:  [data_node_2]:
Constraint|Type|Columns|Index|Expr|Deferrable|Deferred|Validated
----------+----+-------+-----+----+----------+--------+---------
(0 rows)


NOTICE:  [data_node_3]:  SELECT * FROM test.show_constraints('disttable') 
NOTICE:  [data_node_3]:
Constraint|Type|Columns|Index|Expr|Deferrable|Deferred|Validated
----------+----+-------+-----+----+----------+--------+---------
(0 rows)


 remote_exec 
-------------
 
(1 row)

-- DROP COLUMN
ALTER TABLE disttable DROP COLUMN color;
SELECT * FROM test.remote_exec(NULL, $$ SELECT * FROM test.show_columns('disttable') $$);
NOTICE:  [data_node_1]:  SELECT * FROM test.show_columns('disttable') 
NOTICE:  [data_node_1]:
Column|Type                    |NotNull
------+------------------------+-------
time  |timestamp with time zone|t      
device|integer                 |f      
temp  |double precision        |f      
(3 rows)


NOTICE:  [data_node_2]:  SELECT * FROM test.show_columns('disttable') 
NOTICE:  [data_node_2]:
Column|Type                    |NotNull
------+------------------------+-------
time  |timestamp with time zone|t      
device|integer                 |f      
temp  |double precision        |f      
(3 rows)


NOTICE:  [data_node_3]:  SELECT * FROM test.show_columns('disttable') 
NOTICE:  [data_node_3]:
Column|Type                    |NotNull
------+------------------------+-------
time  |timestamp with time zone|t      
device|integer                 |f      
temp  |double precision        |f      
(3 rows)


 remote_exec 
-------------
 
(1 row)

-- ADD COLUMN
ALTER TABLE disttable ADD COLUMN description text;
SELECT * FROM test.remote_exec(NULL, $$ SELECT * FROM test.show_columns('disttable') $$);
NOTICE:  [data_node_1]:  SELECT * FROM test.show_columns('disttable') 
NOTICE:  [data_node_1]:
Column     |Type                    |NotNull
-----------+------------------------+-------
time       |timestamp with time zone|t      
device     |integer                 |f      
temp       |double precision        |f      
description|text                    |f      
(4 rows)


NOTICE:  [data_node_2]:  SELECT * FROM test.show_columns('disttable') 
NOTICE:  [data_node_2]:
Column     |Type                    |NotNull
-----------+------------------------+-------
time       |timestamp with time zone|t      
device     |integer                 |f      
temp       |double precision        |f      
description|text                    |f      
(4 rows)


NOTICE:  [data_node_3]:  SELECT * FROM test.show_columns('disttable') 
NOTICE:  [data_node_3]:
Column     |Type                    |NotNull
-----------+------------------------+-------
time       |timestamp with time zone|t      
device     |integer                 |f      
temp       |double precision        |f      
description|text                    |f      
(4 rows)


 remote_exec 
-------------
 
(1 row)

-- CREATE INDEX
CREATE INDEX disttable_description_idx ON disttable (description);
SELECT * FROM test.remote_exec(NULL, $$ SELECT * FROM test.show_indexes('disttable') $$);
NOTICE:  [data_node_1]:  SELECT * FROM test.show_indexes('disttable') 
NOTICE:  [data_node_1]:
Index                    |Columns      |Expr|Unique|Primary|Exclusion|Tablespace
-------------------------+-------------+----+------+-------+---------+----------
disttable_description_idx|{description}|    |f     |f      |f        |          
disttable_pk             |{time}       |    |t     |f      |f        |          
(2 rows)


NOTICE:  [data_node_2]:  SELECT * FROM test.show_indexes('disttable') 
NOTICE:  [data_node_2]:
Index                    |Columns      |Expr|Unique|Primary|Exclusion|Tablespace
-------------------------+-------------+----+------+-------+---------+----------
disttable_description_idx|{description}|    |f     |f      |f        |          
disttable_pk             |{time}       |    |t     |f      |f        |          
(2 rows)


NOTICE:  [data_node_3]:  SELECT * FROM test.show_indexes('disttable') 
NOTICE:  [data_node_3]:
Index                    |Columns      |Expr|Unique|Primary|Exclusion|Tablespace
-------------------------+-------------+----+------+-------+---------+----------
disttable_description_idx|{description}|    |f     |f      |f        |          
disttable_pk             |{time}       |    |t     |f      |f        |          
(2 rows)


 remote_exec 
-------------
 
(1 row)

-- Test unsupported operations on distributed hypertable
\set ON_ERROR_STOP 0
CLUSTER disttable USING disttable_description_idx;
ERROR:  operation not supported on distributed hypertable
REINDEX TABLE disttable;
ERROR:  operation not supported on distributed hypertable
TRUNCATE disttable;
ERROR:  operation not supported on distributed hypertable
-- test block several hypertables
TRUNCATE disttable, disttable;
ERROR:  operation not supported on distributed hypertable
ALTER TABLE disttable ALTER COLUMN description TYPE INT;
ERROR:  operation not supported on distributed hypertable
ALTER TABLE disttable RENAME TO disttable2;
ERROR:  operation not supported on distributed hypertable
ALTER TABLE disttable RENAME COLUMN description TO descr;
ERROR:  operation not supported on distributed hypertable
ALTER TABLE disttable RENAME CONSTRAINT device_check TO device_chk;
ERROR:  constraint "device_check" for table "disttable" does not exist
ALTER INDEX disttable_description_idx RENAME to disttable_descr_idx;
ERROR:  operation not supported on distributed hypertable
ALTER TABLE disttable SET SCHEMA some_unexist_schema;
ERROR:  schema "some_unexist_schema" does not exist
ALTER TABLE disttable SET SCHEMA some_schema;
ERROR:  operation not supported on distributed hypertable
CREATE TABLE non_disttable1(id int);
CREATE TABLE non_disttable2(id int);
DROP TABLE non_disttable1, disttable;
ERROR:  cannot drop a hypertable along with other objects
DROP TABLE disttable, non_disttable2;
ERROR:  cannot drop a hypertable along with other objects
DROP TABLE disttable, disttable;
ERROR:  cannot drop a hypertable along with other objects
\set ON_ERROR_STOP 1
-- CREATE/DROP TRIGGER
CREATE OR REPLACE FUNCTION test_trigger()
RETURNS TRIGGER LANGUAGE PLPGSQL AS
$BODY$
BEGIN
RETURN OLD;
END
$BODY$;
CREATE TRIGGER disttable_trigger_test
BEFORE INSERT ON disttable
FOR EACH ROW EXECUTE PROCEDURE test_trigger();
DROP TRIGGER disttable_trigger_test on disttable;
DROP FUNCTION test_trigger;
-- DROP INDEX
\set ON_ERROR_STOP 0
DROP INDEX disttable_description_idx, disttable_pk;
ERROR:  cannot drop a hypertable index along with other objects
\set ON_ERROR_STOP 1
DROP INDEX disttable_description_idx;
DROP INDEX disttable_pk;
SELECT * FROM test.show_indexes('disttable');
 Index | Columns | Expr | Unique | Primary | Exclusion | Tablespace 
-------+---------+------+--------+---------+-----------+------------
(0 rows)

SELECT * FROM test.remote_exec(NULL, $$ SELECT * FROM test.show_indexes('disttable') $$);
NOTICE:  [data_node_1]:  SELECT * FROM test.show_indexes('disttable') 
NOTICE:  [data_node_1]:
Index|Columns|Expr|Unique|Primary|Exclusion|Tablespace
-----+-------+----+------+-------+---------+----------
(0 rows)


NOTICE:  [data_node_2]:  SELECT * FROM test.show_indexes('disttable') 
NOTICE:  [data_node_2]:
Index|Columns|Expr|Unique|Primary|Exclusion|Tablespace
-----+-------+----+------+-------+---------+----------
(0 rows)


NOTICE:  [data_node_3]:  SELECT * FROM test.show_indexes('disttable') 
NOTICE:  [data_node_3]:
Index|Columns|Expr|Unique|Primary|Exclusion|Tablespace
-----+-------+----+------+-------+---------+----------
(0 rows)


 remote_exec 
-------------
 
(1 row)

-- DROP TABLE
DROP TABLE disttable;
SELECT * FROM test.remote_exec(NULL, $$ SELECT 1 FROM pg_tables WHERE tablename = 'disttable' $$);
NOTICE:  [data_node_1]:  SELECT 1 FROM pg_tables WHERE tablename = 'disttable' 
NOTICE:  [data_node_1]:
?column?
--------
(0 rows)


NOTICE:  [data_node_2]:  SELECT 1 FROM pg_tables WHERE tablename = 'disttable' 
NOTICE:  [data_node_2]:
?column?
--------
(0 rows)


NOTICE:  [data_node_3]:  SELECT 1 FROM pg_tables WHERE tablename = 'disttable' 
NOTICE:  [data_node_3]:
?column?
--------
(0 rows)


 remote_exec 
-------------
 
(1 row)

DROP TABLE non_disttable1;
DROP TABLE non_disttable2;
-- Test current SCHEMA limitations
-- CREATE TABLE should fail, since remote data nodes has no schema
\set ON_ERROR_STOP 0
CREATE TABLE disttable_schema.disttable(time timestamptz, device int, color int, temp float);
SELECT test.execute_sql_and_filter_data_node_name_on_error($$
SELECT * FROM create_hypertable('disttable_schema.disttable', 'time', replication_factor => 3)
$$);
NOTICE:  adding not-null constraint to column "time"
ERROR:  [data_node_x]: schema "disttable_schema" does not exist
SELECT * FROM test.remote_exec(NULL, $$ SELECT schemaname, tablename FROM pg_tables WHERE tablename = 'disttable' $$);
NOTICE:  [data_node_1]:  SELECT schemaname, tablename FROM pg_tables WHERE tablename = 'disttable' 
NOTICE:  [data_node_1]:
schemaname|tablename
----------+---------
(0 rows)


NOTICE:  [data_node_2]:  SELECT schemaname, tablename FROM pg_tables WHERE tablename = 'disttable' 
NOTICE:  [data_node_2]:
schemaname|tablename
----------+---------
(0 rows)


NOTICE:  [data_node_3]:  SELECT schemaname, tablename FROM pg_tables WHERE tablename = 'disttable' 
NOTICE:  [data_node_3]:
schemaname|tablename
----------+---------
(0 rows)


 remote_exec 
-------------
 
(1 row)

-- CREATE and DROP SCHEMA CASCADE
\c data_node_1
CREATE SCHEMA some_schema AUTHORIZATION :ROLE_DEFAULT_CLUSTER_USER;
\c data_node_2
CREATE SCHEMA some_schema AUTHORIZATION :ROLE_DEFAULT_CLUSTER_USER;
\c data_node_3
CREATE SCHEMA some_schema AUTHORIZATION :ROLE_DEFAULT_CLUSTER_USER;
\c :TEST_DBNAME :ROLE_SUPERUSER;
SET ROLE :ROLE_DEFAULT_CLUSTER_USER;
CREATE TABLE some_schema.some_dist_table(time timestamptz, device int, color int, temp float);
SELECT * FROM create_hypertable('some_schema.some_dist_table', 'time', replication_factor => 3);
NOTICE:  adding not-null constraint to column "time"
 hypertable_id | schema_name |   table_name    | created 
---------------+-------------+-----------------+---------
             3 | some_schema | some_dist_table | t
(1 row)

SELECT * FROM test.remote_exec(NULL, $$ SELECT schemaname, tablename FROM pg_tables WHERE tablename = 'some_dist_table' $$);
NOTICE:  [data_node_1]:  SELECT schemaname, tablename FROM pg_tables WHERE tablename = 'some_dist_table' 
NOTICE:  [data_node_1]:
schemaname |tablename      
-----------+---------------
some_schema|some_dist_table
(1 row)


NOTICE:  [data_node_2]:  SELECT schemaname, tablename FROM pg_tables WHERE tablename = 'some_dist_table' 
NOTICE:  [data_node_2]:
schemaname |tablename      
-----------+---------------
some_schema|some_dist_table
(1 row)


NOTICE:  [data_node_3]:  SELECT schemaname, tablename FROM pg_tables WHERE tablename = 'some_dist_table' 
NOTICE:  [data_node_3]:
schemaname |tablename      
-----------+---------------
some_schema|some_dist_table
(1 row)


 remote_exec 
-------------
 
(1 row)

DROP SCHEMA some_schema CASCADE;
NOTICE:  drop cascades to table some_schema.some_dist_table
SELECT * FROM test.remote_exec(NULL, $$ SELECT schemaname, tablename FROM pg_tables WHERE tablename = 'some_dist_table' $$);
NOTICE:  [data_node_1]:  SELECT schemaname, tablename FROM pg_tables WHERE tablename = 'some_dist_table' 
NOTICE:  [data_node_1]:
schemaname|tablename
----------+---------
(0 rows)


NOTICE:  [data_node_2]:  SELECT schemaname, tablename FROM pg_tables WHERE tablename = 'some_dist_table' 
NOTICE:  [data_node_2]:
schemaname|tablename
----------+---------
(0 rows)


NOTICE:  [data_node_3]:  SELECT schemaname, tablename FROM pg_tables WHERE tablename = 'some_dist_table' 
NOTICE:  [data_node_3]:
schemaname|tablename
----------+---------
(0 rows)


 remote_exec 
-------------
 
(1 row)

-- DROP column cascades to index drop
CREATE TABLE some_dist_table(time timestamptz, device int, color int, temp float);
SELECT * FROM create_hypertable('some_dist_table', 'time', replication_factor => 3);
NOTICE:  adding not-null constraint to column "time"
 hypertable_id | schema_name |   table_name    | created 
---------------+-------------+-----------------+---------
             4 | public      | some_dist_table | t
(1 row)

CREATE INDEX some_dist_device_idx ON some_dist_table (device);
SELECT * FROM test.remote_exec(NULL, $$ SELECT * FROM test.show_indexes('some_dist_table') $$);
NOTICE:  [data_node_1]:  SELECT * FROM test.show_indexes('some_dist_table') 
NOTICE:  [data_node_1]:
Index                   |Columns |Expr|Unique|Primary|Exclusion|Tablespace
------------------------+--------+----+------+-------+---------+----------
some_dist_device_idx    |{device}|    |f     |f      |f        |          
some_dist_table_time_idx|{time}  |    |f     |f      |f        |          
(2 rows)


NOTICE:  [data_node_2]:  SELECT * FROM test.show_indexes('some_dist_table') 
NOTICE:  [data_node_2]:
Index                   |Columns |Expr|Unique|Primary|Exclusion|Tablespace
------------------------+--------+----+------+-------+---------+----------
some_dist_device_idx    |{device}|    |f     |f      |f        |          
some_dist_table_time_idx|{time}  |    |f     |f      |f        |          
(2 rows)


NOTICE:  [data_node_3]:  SELECT * FROM test.show_indexes('some_dist_table') 
NOTICE:  [data_node_3]:
Index                   |Columns |Expr|Unique|Primary|Exclusion|Tablespace
------------------------+--------+----+------+-------+---------+----------
some_dist_device_idx    |{device}|    |f     |f      |f        |          
some_dist_table_time_idx|{time}  |    |f     |f      |f        |          
(2 rows)


 remote_exec 
-------------
 
(1 row)

ALTER TABLE some_dist_table DROP COLUMN device;
SELECT * FROM test.remote_exec(NULL, $$ SELECT * FROM test.show_indexes('some_dist_table') $$);
NOTICE:  [data_node_1]:  SELECT * FROM test.show_indexes('some_dist_table') 
NOTICE:  [data_node_1]:
Index                   |Columns|Expr|Unique|Primary|Exclusion|Tablespace
------------------------+-------+----+------+-------+---------+----------
some_dist_table_time_idx|{time} |    |f     |f      |f        |          
(1 row)


NOTICE:  [data_node_2]:  SELECT * FROM test.show_indexes('some_dist_table') 
NOTICE:  [data_node_2]:
Index                   |Columns|Expr|Unique|Primary|Exclusion|Tablespace
------------------------+-------+----+------+-------+---------+----------
some_dist_table_time_idx|{time} |    |f     |f      |f        |          
(1 row)


NOTICE:  [data_node_3]:  SELECT * FROM test.show_indexes('some_dist_table') 
NOTICE:  [data_node_3]:
Index                   |Columns|Expr|Unique|Primary|Exclusion|Tablespace
------------------------+-------+----+------+-------+---------+----------
some_dist_table_time_idx|{time} |    |f     |f      |f        |          
(1 row)


 remote_exec 
-------------
 
(1 row)

DROP TABLE some_dist_table;
-- Creation of foreign key on distributed hypertable table will lead
-- to error, since non_htable is local
CREATE TABLE non_htable (id int PRIMARY KEY);
CREATE TABLE some_dist_table(time timestamptz, device int REFERENCES non_htable(id));
\set ON_ERROR_STOP 0
SELECT test.execute_sql_and_filter_data_node_name_on_error($$
SELECT * FROM create_hypertable('some_dist_table', 'time', replication_factor => 3);
$$);
NOTICE:  adding not-null constraint to column "time"
ERROR:  [data_node_x]: relation "non_htable" does not exist
\set ON_ERROR_STOP 1
DROP TABLE some_dist_table;
DROP TABLE non_htable;
-- Transactional DDL tests
-- Single-statement transactions
-- BEGIN/COMMIT
CREATE TABLE some_dist_table(time timestamptz, device int);
SELECT * FROM create_hypertable('some_dist_table', 'time', replication_factor => 3);
NOTICE:  adding not-null constraint to column "time"
 hypertable_id | schema_name |   table_name    | created 
---------------+-------------+-----------------+---------
             6 | public      | some_dist_table | t
(1 row)

BEGIN;
CREATE INDEX some_dist_device_idx ON some_dist_table (device);
COMMIT;
SELECT * FROM test.show_indexes('some_dist_table');
          Index           | Columns  | Expr | Unique | Primary | Exclusion | Tablespace 
--------------------------+----------+------+--------+---------+-----------+------------
 some_dist_device_idx     | {device} |      | f      | f       | f         | 
 some_dist_table_time_idx | {time}   |      | f      | f       | f         | 
(2 rows)

SELECT * FROM test.remote_exec(NULL, $$ SELECT * FROM test.show_indexes('some_dist_table') $$);
NOTICE:  [data_node_1]:  SELECT * FROM test.show_indexes('some_dist_table') 
NOTICE:  [data_node_1]:
Index                   |Columns |Expr|Unique|Primary|Exclusion|Tablespace
------------------------+--------+----+------+-------+---------+----------
some_dist_device_idx    |{device}|    |f     |f      |f        |          
some_dist_table_time_idx|{time}  |    |f     |f      |f        |          
(2 rows)


NOTICE:  [data_node_2]:  SELECT * FROM test.show_indexes('some_dist_table') 
NOTICE:  [data_node_2]:
Index                   |Columns |Expr|Unique|Primary|Exclusion|Tablespace
------------------------+--------+----+------+-------+---------+----------
some_dist_device_idx    |{device}|    |f     |f      |f        |          
some_dist_table_time_idx|{time}  |    |f     |f      |f        |          
(2 rows)


NOTICE:  [data_node_3]:  SELECT * FROM test.show_indexes('some_dist_table') 
NOTICE:  [data_node_3]:
Index                   |Columns |Expr|Unique|Primary|Exclusion|Tablespace
------------------------+--------+----+------+-------+---------+----------
some_dist_device_idx    |{device}|    |f     |f      |f        |          
some_dist_table_time_idx|{time}  |    |f     |f      |f        |          
(2 rows)


 remote_exec 
-------------
 
(1 row)

DROP TABLE some_dist_table;
-- BEGIN/ROLLBACK
CREATE TABLE some_dist_table(time timestamptz, device int);
SELECT * FROM create_hypertable('some_dist_table', 'time', replication_factor => 3);
NOTICE:  adding not-null constraint to column "time"
 hypertable_id | schema_name |   table_name    | created 
---------------+-------------+-----------------+---------
             7 | public      | some_dist_table | t
(1 row)

BEGIN;
CREATE INDEX some_dist_device_idx ON some_dist_table (device);
ROLLBACK;
SELECT * FROM test.show_indexes('some_dist_table');
          Index           | Columns | Expr | Unique | Primary | Exclusion | Tablespace 
--------------------------+---------+------+--------+---------+-----------+------------
 some_dist_table_time_idx | {time}  |      | f      | f       | f         | 
(1 row)

SELECT * FROM test.remote_exec(NULL, $$ SELECT * FROM test.show_indexes('some_dist_table') $$);
NOTICE:  [data_node_1]:  SELECT * FROM test.show_indexes('some_dist_table') 
NOTICE:  [data_node_1]:
Index                   |Columns|Expr|Unique|Primary|Exclusion|Tablespace
------------------------+-------+----+------+-------+---------+----------
some_dist_table_time_idx|{time} |    |f     |f      |f        |          
(1 row)


NOTICE:  [data_node_2]:  SELECT * FROM test.show_indexes('some_dist_table') 
NOTICE:  [data_node_2]:
Index                   |Columns|Expr|Unique|Primary|Exclusion|Tablespace
------------------------+-------+----+------+-------+---------+----------
some_dist_table_time_idx|{time} |    |f     |f      |f        |          
(1 row)


NOTICE:  [data_node_3]:  SELECT * FROM test.show_indexes('some_dist_table') 
NOTICE:  [data_node_3]:
Index                   |Columns|Expr|Unique|Primary|Exclusion|Tablespace
------------------------+-------+----+------+-------+---------+----------
some_dist_table_time_idx|{time} |    |f     |f      |f        |          
(1 row)


 remote_exec 
-------------
 
(1 row)

DROP TABLE some_dist_table;
-- Multi-statement transactions
-- BEGIN/COMMIT
CREATE TABLE some_dist_table(time timestamptz, device int);
SELECT * FROM create_hypertable('some_dist_table', 'time', replication_factor => 3);
NOTICE:  adding not-null constraint to column "time"
 hypertable_id | schema_name |   table_name    | created 
---------------+-------------+-----------------+---------
             8 | public      | some_dist_table | t
(1 row)

BEGIN;
CREATE INDEX some_dist_device_idx ON some_dist_table (device);
ALTER TABLE some_dist_table ADD CONSTRAINT device_check CHECK (device > 0);
COMMIT;
SELECT * FROM test.show_indexes('some_dist_table');
          Index           | Columns  | Expr | Unique | Primary | Exclusion | Tablespace 
--------------------------+----------+------+--------+---------+-----------+------------
 some_dist_device_idx     | {device} |      | f      | f       | f         | 
 some_dist_table_time_idx | {time}   |      | f      | f       | f         | 
(2 rows)

SELECT * FROM test.show_constraints('some_dist_table');
  Constraint  | Type | Columns  | Index |     Expr     | Deferrable | Deferred | Validated 
--------------+------+----------+-------+--------------+------------+----------+-----------
 device_check | c    | {device} | -     | (device > 0) | f          | f        | t
(1 row)

SELECT * FROM test.remote_exec(NULL, $$
SELECT * FROM test.show_indexes('some_dist_table');
SELECT * FROM test.show_constraints('some_dist_table');
$$);
NOTICE:  [data_node_1]: 
SELECT * FROM test.show_indexes('some_dist_table')
NOTICE:  [data_node_1]:
Index                   |Columns |Expr|Unique|Primary|Exclusion|Tablespace
------------------------+--------+----+------+-------+---------+----------
some_dist_device_idx    |{device}|    |f     |f      |f        |          
some_dist_table_time_idx|{time}  |    |f     |f      |f        |          
(2 rows)


NOTICE:  [data_node_1]: 
SELECT * FROM test.show_constraints('some_dist_table')
NOTICE:  [data_node_1]:
Constraint  |Type|Columns |Index|Expr        |Deferrable|Deferred|Validated
------------+----+--------+-----+------------+----------+--------+---------
device_check|c   |{device}|-    |(device > 0)|f         |f       |t        
(1 row)


NOTICE:  [data_node_2]: 
SELECT * FROM test.show_indexes('some_dist_table')
NOTICE:  [data_node_2]:
Index                   |Columns |Expr|Unique|Primary|Exclusion|Tablespace
------------------------+--------+----+------+-------+---------+----------
some_dist_device_idx    |{device}|    |f     |f      |f        |          
some_dist_table_time_idx|{time}  |    |f     |f      |f        |          
(2 rows)


NOTICE:  [data_node_2]: 
SELECT * FROM test.show_constraints('some_dist_table')
NOTICE:  [data_node_2]:
Constraint  |Type|Columns |Index|Expr        |Deferrable|Deferred|Validated
------------+----+--------+-----+------------+----------+--------+---------
device_check|c   |{device}|-    |(device > 0)|f         |f       |t        
(1 row)


NOTICE:  [data_node_3]: 
SELECT * FROM test.show_indexes('some_dist_table')
NOTICE:  [data_node_3]:
Index                   |Columns |Expr|Unique|Primary|Exclusion|Tablespace
------------------------+--------+----+------+-------+---------+----------
some_dist_device_idx    |{device}|    |f     |f      |f        |          
some_dist_table_time_idx|{time}  |    |f     |f      |f        |          
(2 rows)


NOTICE:  [data_node_3]: 
SELECT * FROM test.show_constraints('some_dist_table')
NOTICE:  [data_node_3]:
Constraint  |Type|Columns |Index|Expr        |Deferrable|Deferred|Validated
------------+----+--------+-----+------------+----------+--------+---------
device_check|c   |{device}|-    |(device > 0)|f         |f       |t        
(1 row)


 remote_exec 
-------------
 
(1 row)

DROP TABLE some_dist_table;
-- BEGIN/ROLLBACK
CREATE TABLE some_dist_table(time timestamptz, device int);
SELECT * FROM create_hypertable('some_dist_table', 'time', replication_factor => 3);
NOTICE:  adding not-null constraint to column "time"
 hypertable_id | schema_name |   table_name    | created 
---------------+-------------+-----------------+---------
             9 | public      | some_dist_table | t
(1 row)

BEGIN;
CREATE INDEX some_dist_device_idx ON some_dist_table (device);
ALTER TABLE some_dist_table ADD CONSTRAINT device_check CHECK (device > 0);
ROLLBACK;
SELECT * FROM test.show_indexes('some_dist_table');
          Index           | Columns | Expr | Unique | Primary | Exclusion | Tablespace 
--------------------------+---------+------+--------+---------+-----------+------------
 some_dist_table_time_idx | {time}  |      | f      | f       | f         | 
(1 row)

SELECT * FROM test.show_constraints('some_dist_table');
 Constraint | Type | Columns | Index | Expr | Deferrable | Deferred | Validated 
------------+------+---------+-------+------+------------+----------+-----------
(0 rows)

SELECT * FROM test.remote_exec(NULL, $$
SELECT * FROM test.show_indexes('some_dist_table');
SELECT * FROM test.show_constraints('some_dist_table');
$$);
NOTICE:  [data_node_1]: 
SELECT * FROM test.show_indexes('some_dist_table')
NOTICE:  [data_node_1]:
Index                   |Columns|Expr|Unique|Primary|Exclusion|Tablespace
------------------------+-------+----+------+-------+---------+----------
some_dist_table_time_idx|{time} |    |f     |f      |f        |          
(1 row)


NOTICE:  [data_node_1]: 
SELECT * FROM test.show_constraints('some_dist_table')
NOTICE:  [data_node_1]:
Constraint|Type|Columns|Index|Expr|Deferrable|Deferred|Validated
----------+----+-------+-----+----+----------+--------+---------
(0 rows)


NOTICE:  [data_node_2]: 
SELECT * FROM test.show_indexes('some_dist_table')
NOTICE:  [data_node_2]:
Index                   |Columns|Expr|Unique|Primary|Exclusion|Tablespace
------------------------+-------+----+------+-------+---------+----------
some_dist_table_time_idx|{time} |    |f     |f      |f        |          
(1 row)


NOTICE:  [data_node_2]: 
SELECT * FROM test.show_constraints('some_dist_table')
NOTICE:  [data_node_2]:
Constraint|Type|Columns|Index|Expr|Deferrable|Deferred|Validated
----------+----+-------+-----+----+----------+--------+---------
(0 rows)


NOTICE:  [data_node_3]: 
SELECT * FROM test.show_indexes('some_dist_table')
NOTICE:  [data_node_3]:
Index                   |Columns|Expr|Unique|Primary|Exclusion|Tablespace
------------------------+-------+----+------+-------+---------+----------
some_dist_table_time_idx|{time} |    |f     |f      |f        |          
(1 row)


NOTICE:  [data_node_3]: 
SELECT * FROM test.show_constraints('some_dist_table')
NOTICE:  [data_node_3]:
Constraint|Type|Columns|Index|Expr|Deferrable|Deferred|Validated
----------+----+-------+-----+----+----------+--------+---------
(0 rows)


 remote_exec 
-------------
 
(1 row)

DROP TABLE some_dist_table;
-- Nested transactions
-- BEGIN/BEGIN/COMMIT/COMMIT
CREATE TABLE some_dist_table(time timestamptz, device int);
SELECT * FROM create_hypertable('some_dist_table', 'time', replication_factor => 3);
NOTICE:  adding not-null constraint to column "time"
 hypertable_id | schema_name |   table_name    | created 
---------------+-------------+-----------------+---------
            10 | public      | some_dist_table | t
(1 row)

BEGIN;
SAVEPOINT a;
CREATE INDEX some_dist_device_idx ON some_dist_table (device);
SAVEPOINT b;
ALTER TABLE some_dist_table ADD CONSTRAINT device_check CHECK (device > 0);
COMMIT;
SELECT * FROM test.show_indexes('some_dist_table');
          Index           | Columns  | Expr | Unique | Primary | Exclusion | Tablespace 
--------------------------+----------+------+--------+---------+-----------+------------
 some_dist_device_idx     | {device} |      | f      | f       | f         | 
 some_dist_table_time_idx | {time}   |      | f      | f       | f         | 
(2 rows)

SELECT * FROM test.show_constraints('some_dist_table');
  Constraint  | Type | Columns  | Index |     Expr     | Deferrable | Deferred | Validated 
--------------+------+----------+-------+--------------+------------+----------+-----------
 device_check | c    | {device} | -     | (device > 0) | f          | f        | t
(1 row)

SELECT * FROM test.remote_exec(NULL, $$
SELECT * FROM test.show_indexes('some_dist_table');
SELECT * FROM test.show_constraints('some_dist_table');
$$);
NOTICE:  [data_node_1]: 
SELECT * FROM test.show_indexes('some_dist_table')
NOTICE:  [data_node_1]:
Index                   |Columns |Expr|Unique|Primary|Exclusion|Tablespace
------------------------+--------+----+------+-------+---------+----------
some_dist_device_idx    |{device}|    |f     |f      |f        |          
some_dist_table_time_idx|{time}  |    |f     |f      |f        |          
(2 rows)


NOTICE:  [data_node_1]: 
SELECT * FROM test.show_constraints('some_dist_table')
NOTICE:  [data_node_1]:
Constraint  |Type|Columns |Index|Expr        |Deferrable|Deferred|Validated
------------+----+--------+-----+------------+----------+--------+---------
device_check|c   |{device}|-    |(device > 0)|f         |f       |t        
(1 row)


NOTICE:  [data_node_2]: 
SELECT * FROM test.show_indexes('some_dist_table')
NOTICE:  [data_node_2]:
Index                   |Columns |Expr|Unique|Primary|Exclusion|Tablespace
------------------------+--------+----+------+-------+---------+----------
some_dist_device_idx    |{device}|    |f     |f      |f        |          
some_dist_table_time_idx|{time}  |    |f     |f      |f        |          
(2 rows)


NOTICE:  [data_node_2]: 
SELECT * FROM test.show_constraints('some_dist_table')
NOTICE:  [data_node_2]:
Constraint  |Type|Columns |Index|Expr        |Deferrable|Deferred|Validated
------------+----+--------+-----+------------+----------+--------+---------
device_check|c   |{device}|-    |(device > 0)|f         |f       |t        
(1 row)


NOTICE:  [data_node_3]: 
SELECT * FROM test.show_indexes('some_dist_table')
NOTICE:  [data_node_3]:
Index                   |Columns |Expr|Unique|Primary|Exclusion|Tablespace
------------------------+--------+----+------+-------+---------+----------
some_dist_device_idx    |{device}|    |f     |f      |f        |          
some_dist_table_time_idx|{time}  |    |f     |f      |f        |          
(2 rows)


NOTICE:  [data_node_3]: 
SELECT * FROM test.show_constraints('some_dist_table')
NOTICE:  [data_node_3]:
Constraint  |Type|Columns |Index|Expr        |Deferrable|Deferred|Validated
------------+----+--------+-----+------------+----------+--------+---------
device_check|c   |{device}|-    |(device > 0)|f         |f       |t        
(1 row)


 remote_exec 
-------------
 
(1 row)

DROP TABLE some_dist_table;
-- BEGIN/BEGIN/ROLLBACK/COMMIT
CREATE TABLE some_dist_table(time timestamptz, device int);
SELECT * FROM create_hypertable('some_dist_table', 'time', replication_factor => 3);
NOTICE:  adding not-null constraint to column "time"
 hypertable_id | schema_name |   table_name    | created 
---------------+-------------+-----------------+---------
            11 | public      | some_dist_table | t
(1 row)

BEGIN;
SAVEPOINT a;
CREATE INDEX some_dist_device_idx ON some_dist_table (device);
SAVEPOINT b;
ALTER TABLE some_dist_table ADD CONSTRAINT device_check CHECK (device > 0);
ROLLBACK TO SAVEPOINT b;
COMMIT;
SELECT * FROM test.show_indexes('some_dist_table');
          Index           | Columns  | Expr | Unique | Primary | Exclusion | Tablespace 
--------------------------+----------+------+--------+---------+-----------+------------
 some_dist_device_idx     | {device} |      | f      | f       | f         | 
 some_dist_table_time_idx | {time}   |      | f      | f       | f         | 
(2 rows)

SELECT * FROM test.show_constraints('some_dist_table');
 Constraint | Type | Columns | Index | Expr | Deferrable | Deferred | Validated 
------------+------+---------+-------+------+------------+----------+-----------
(0 rows)

SELECT * FROM test.remote_exec(NULL, $$
SELECT * FROM test.show_indexes('some_dist_table');
SELECT * FROM test.show_constraints('some_dist_table');
$$);
NOTICE:  [data_node_1]: 
SELECT * FROM test.show_indexes('some_dist_table')
NOTICE:  [data_node_1]:
Index                   |Columns |Expr|Unique|Primary|Exclusion|Tablespace
------------------------+--------+----+------+-------+---------+----------
some_dist_device_idx    |{device}|    |f     |f      |f        |          
some_dist_table_time_idx|{time}  |    |f     |f      |f        |          
(2 rows)


NOTICE:  [data_node_1]: 
SELECT * FROM test.show_constraints('some_dist_table')
NOTICE:  [data_node_1]:
Constraint|Type|Columns|Index|Expr|Deferrable|Deferred|Validated
----------+----+-------+-----+----+----------+--------+---------
(0 rows)


NOTICE:  [data_node_2]: 
SELECT * FROM test.show_indexes('some_dist_table')
NOTICE:  [data_node_2]:
Index                   |Columns |Expr|Unique|Primary|Exclusion|Tablespace
------------------------+--------+----+------+-------+---------+----------
some_dist_device_idx    |{device}|    |f     |f      |f        |          
some_dist_table_time_idx|{time}  |    |f     |f      |f        |          
(2 rows)


NOTICE:  [data_node_2]: 
SELECT * FROM test.show_constraints('some_dist_table')
NOTICE:  [data_node_2]:
Constraint|Type|Columns|Index|Expr|Deferrable|Deferred|Validated
----------+----+-------+-----+----+----------+--------+---------
(0 rows)


NOTICE:  [data_node_3]: 
SELECT * FROM test.show_indexes('some_dist_table')
NOTICE:  [data_node_3]:
Index                   |Columns |Expr|Unique|Primary|Exclusion|Tablespace
------------------------+--------+----+------+-------+---------+----------
some_dist_device_idx    |{device}|    |f     |f      |f        |          
some_dist_table_time_idx|{time}  |    |f     |f      |f        |          
(2 rows)


NOTICE:  [data_node_3]: 
SELECT * FROM test.show_constraints('some_dist_table')
NOTICE:  [data_node_3]:
Constraint|Type|Columns|Index|Expr|Deferrable|Deferred|Validated
----------+----+-------+-----+----+----------+--------+---------
(0 rows)


 remote_exec 
-------------
 
(1 row)

DROP TABLE some_dist_table;
-- BEGIN/BEGIN/COMMIT/ROLLBACK
CREATE TABLE some_dist_table(time timestamptz, device int);
SELECT * FROM create_hypertable('some_dist_table', 'time', replication_factor => 3);
NOTICE:  adding not-null constraint to column "time"
 hypertable_id | schema_name |   table_name    | created 
---------------+-------------+-----------------+---------
            12 | public      | some_dist_table | t
(1 row)

BEGIN;
SAVEPOINT a;
CREATE INDEX some_dist_device_idx ON some_dist_table (device);
SAVEPOINT b;
ALTER TABLE some_dist_table ADD CONSTRAINT device_check CHECK (device > 0);
ROLLBACK TO SAVEPOINT a;
ROLLBACK;
SELECT * FROM test.show_indexes('some_dist_table');
          Index           | Columns | Expr | Unique | Primary | Exclusion | Tablespace 
--------------------------+---------+------+--------+---------+-----------+------------
 some_dist_table_time_idx | {time}  |      | f      | f       | f         | 
(1 row)

SELECT * FROM test.show_constraints('some_dist_table');
 Constraint | Type | Columns | Index | Expr | Deferrable | Deferred | Validated 
------------+------+---------+-------+------+------------+----------+-----------
(0 rows)

SELECT * FROM test.remote_exec(NULL, $$
SELECT * FROM test.show_indexes('some_dist_table');
SELECT * FROM test.show_constraints('some_dist_table');
$$);
NOTICE:  [data_node_1]: 
SELECT * FROM test.show_indexes('some_dist_table')
NOTICE:  [data_node_1]:
Index                   |Columns|Expr|Unique|Primary|Exclusion|Tablespace
------------------------+-------+----+------+-------+---------+----------
some_dist_table_time_idx|{time} |    |f     |f      |f        |          
(1 row)


NOTICE:  [data_node_1]: 
SELECT * FROM test.show_constraints('some_dist_table')
NOTICE:  [data_node_1]:
Constraint|Type|Columns|Index|Expr|Deferrable|Deferred|Validated
----------+----+-------+-----+----+----------+--------+---------
(0 rows)


NOTICE:  [data_node_2]: 
SELECT * FROM test.show_indexes('some_dist_table')
NOTICE:  [data_node_2]:
Index                   |Columns|Expr|Unique|Primary|Exclusion|Tablespace
------------------------+-------+----+------+-------+---------+----------
some_dist_table_time_idx|{time} |    |f     |f      |f        |          
(1 row)


NOTICE:  [data_node_2]: 
SELECT * FROM test.show_constraints('some_dist_table')
NOTICE:  [data_node_2]:
Constraint|Type|Columns|Index|Expr|Deferrable|Deferred|Validated
----------+----+-------+-----+----+----------+--------+---------
(0 rows)


NOTICE:  [data_node_3]: 
SELECT * FROM test.show_indexes('some_dist_table')
NOTICE:  [data_node_3]:
Index                   |Columns|Expr|Unique|Primary|Exclusion|Tablespace
------------------------+-------+----+------+-------+---------+----------
some_dist_table_time_idx|{time} |    |f     |f      |f        |          
(1 row)


NOTICE:  [data_node_3]: 
SELECT * FROM test.show_constraints('some_dist_table')
NOTICE:  [data_node_3]:
Constraint|Type|Columns|Index|Expr|Deferrable|Deferred|Validated
----------+----+-------+-----+----+----------+--------+---------
(0 rows)


 remote_exec 
-------------
 
(1 row)

DROP TABLE some_dist_table;
-- BEGIN/BEGIN/ROLLBACK/ROLLBACK
CREATE TABLE some_dist_table(time timestamptz, device int);
SELECT * FROM create_hypertable('some_dist_table', 'time', replication_factor => 3);
NOTICE:  adding not-null constraint to column "time"
 hypertable_id | schema_name |   table_name    | created 
---------------+-------------+-----------------+---------
            13 | public      | some_dist_table | t
(1 row)

BEGIN;
SAVEPOINT a;
CREATE INDEX some_dist_device_idx ON some_dist_table (device);
SAVEPOINT b;
ALTER TABLE some_dist_table ADD CONSTRAINT device_check CHECK (device > 0);
ROLLBACK TO SAVEPOINT b;
ROLLBACK TO SAVEPOINT a;
ROLLBACK;
SELECT * FROM test.show_indexes('some_dist_table');
          Index           | Columns | Expr | Unique | Primary | Exclusion | Tablespace 
--------------------------+---------+------+--------+---------+-----------+------------
 some_dist_table_time_idx | {time}  |      | f      | f       | f         | 
(1 row)

SELECT * FROM test.show_constraints('some_dist_table');
 Constraint | Type | Columns | Index | Expr | Deferrable | Deferred | Validated 
------------+------+---------+-------+------+------------+----------+-----------
(0 rows)

SELECT * FROM test.remote_exec(NULL, $$
SELECT * FROM test.show_indexes('some_dist_table');
SELECT * FROM test.show_constraints('some_dist_table');
$$);
NOTICE:  [data_node_1]: 
SELECT * FROM test.show_indexes('some_dist_table')
NOTICE:  [data_node_1]:
Index                   |Columns|Expr|Unique|Primary|Exclusion|Tablespace
------------------------+-------+----+------+-------+---------+----------
some_dist_table_time_idx|{time} |    |f     |f      |f        |          
(1 row)


NOTICE:  [data_node_1]: 
SELECT * FROM test.show_constraints('some_dist_table')
NOTICE:  [data_node_1]:
Constraint|Type|Columns|Index|Expr|Deferrable|Deferred|Validated
----------+----+-------+-----+----+----------+--------+---------
(0 rows)


NOTICE:  [data_node_2]: 
SELECT * FROM test.show_indexes('some_dist_table')
NOTICE:  [data_node_2]:
Index                   |Columns|Expr|Unique|Primary|Exclusion|Tablespace
------------------------+-------+----+------+-------+---------+----------
some_dist_table_time_idx|{time} |    |f     |f      |f        |          
(1 row)


NOTICE:  [data_node_2]: 
SELECT * FROM test.show_constraints('some_dist_table')
NOTICE:  [data_node_2]:
Constraint|Type|Columns|Index|Expr|Deferrable|Deferred|Validated
----------+----+-------+-----+----+----------+--------+---------
(0 rows)


NOTICE:  [data_node_3]: 
SELECT * FROM test.show_indexes('some_dist_table')
NOTICE:  [data_node_3]:
Index                   |Columns|Expr|Unique|Primary|Exclusion|Tablespace
------------------------+-------+----+------+-------+---------+----------
some_dist_table_time_idx|{time} |    |f     |f      |f        |          
(1 row)


NOTICE:  [data_node_3]: 
SELECT * FROM test.show_constraints('some_dist_table')
NOTICE:  [data_node_3]:
Constraint|Type|Columns|Index|Expr|Deferrable|Deferred|Validated
----------+----+-------+-----+----+----------+--------+---------
(0 rows)


 remote_exec 
-------------
 
(1 row)

DROP TABLE some_dist_table;
-- BEGIN/BEGIN/ABORT/ROLLBACK
CREATE TABLE some_dist_table(time timestamptz, device int);
SELECT * FROM create_hypertable('some_dist_table', 'time', replication_factor => 3);
NOTICE:  adding not-null constraint to column "time"
 hypertable_id | schema_name |   table_name    | created 
---------------+-------------+-----------------+---------
            14 | public      | some_dist_table | t
(1 row)

BEGIN;
SAVEPOINT a;
CREATE INDEX some_dist_device_idx ON some_dist_table (device);
SAVEPOINT b;
ALTER TABLE some_dist_table ADD CONSTRAINT device_check CHECK (device > 0);
\set ON_ERROR_STOP 0
ALTER TABLE some_dist_table ADD CONSTRAINT device_check CHECK (device > 0);
ERROR:  constraint "device_check" for relation "some_dist_table" already exists
\set ON_ERROR_STOP 1
ROLLBACK TO SAVEPOINT b;
ROLLBACK TO SAVEPOINT a;
ROLLBACK;
SELECT * FROM test.show_indexes('some_dist_table');
          Index           | Columns | Expr | Unique | Primary | Exclusion | Tablespace 
--------------------------+---------+------+--------+---------+-----------+------------
 some_dist_table_time_idx | {time}  |      | f      | f       | f         | 
(1 row)

SELECT * FROM test.show_constraints('some_dist_table');
 Constraint | Type | Columns | Index | Expr | Deferrable | Deferred | Validated 
------------+------+---------+-------+------+------------+----------+-----------
(0 rows)

SELECT * FROM test.remote_exec(NULL, $$
SELECT * FROM test.show_indexes('some_dist_table');
SELECT * FROM test.show_constraints('some_dist_table');
$$);
NOTICE:  [data_node_1]: 
SELECT * FROM test.show_indexes('some_dist_table')
NOTICE:  [data_node_1]:
Index                   |Columns|Expr|Unique|Primary|Exclusion|Tablespace
------------------------+-------+----+------+-------+---------+----------
some_dist_table_time_idx|{time} |    |f     |f      |f        |          
(1 row)


NOTICE:  [data_node_1]: 
SELECT * FROM test.show_constraints('some_dist_table')
NOTICE:  [data_node_1]:
Constraint|Type|Columns|Index|Expr|Deferrable|Deferred|Validated
----------+----+-------+-----+----+----------+--------+---------
(0 rows)


NOTICE:  [data_node_2]: 
SELECT * FROM test.show_indexes('some_dist_table')
NOTICE:  [data_node_2]:
Index                   |Columns|Expr|Unique|Primary|Exclusion|Tablespace
------------------------+-------+----+------+-------+---------+----------
some_dist_table_time_idx|{time} |    |f     |f      |f        |          
(1 row)


NOTICE:  [data_node_2]: 
SELECT * FROM test.show_constraints('some_dist_table')
NOTICE:  [data_node_2]:
Constraint|Type|Columns|Index|Expr|Deferrable|Deferred|Validated
----------+----+-------+-----+----+----------+--------+---------
(0 rows)


NOTICE:  [data_node_3]: 
SELECT * FROM test.show_indexes('some_dist_table')
NOTICE:  [data_node_3]:
Index                   |Columns|Expr|Unique|Primary|Exclusion|Tablespace
------------------------+-------+----+------+-------+---------+----------
some_dist_table_time_idx|{time} |    |f     |f      |f        |          
(1 row)


NOTICE:  [data_node_3]: 
SELECT * FROM test.show_constraints('some_dist_table')
NOTICE:  [data_node_3]:
Constraint|Type|Columns|Index|Expr|Deferrable|Deferred|Validated
----------+----+-------+-----+----+----------+--------+---------
(0 rows)


 remote_exec 
-------------
 
(1 row)

DROP TABLE some_dist_table;
-- Test chunks updates
CREATE TABLE disttable(time timestamptz, device int, color int CONSTRAINT color_check CHECK (color > 0), temp float);
CREATE UNIQUE INDEX disttable_pk ON disttable(time);
SELECT * FROM create_hypertable('disttable', 'time', replication_factor => 3);
NOTICE:  adding not-null constraint to column "time"
 hypertable_id | schema_name | table_name | created 
---------------+-------------+------------+---------
            15 | public      | disttable  | t
(1 row)

INSERT INTO disttable VALUES ('2017-01-01 06:01', 0, 1, 0.0);
SELECT show_chunks('disttable');
                 show_chunks                  
----------------------------------------------
 _timescaledb_internal._hyper_15_1_dist_chunk
(1 row)

SELECT * FROM test.show_constraints('disttable');
 Constraint  | Type | Columns | Index |    Expr     | Deferrable | Deferred | Validated 
-------------+------+---------+-------+-------------+------------+----------+-----------
 color_check | c    | {color} | -     | (color > 0) | f          | f        | t
(1 row)

SELECT * FROM test.show_constraints('_timescaledb_internal._hyper_15_1_dist_chunk');
  Constraint  | Type | Columns | Index |                                                                      Expr                                                                      | Deferrable | Deferred | Validated 
--------------+------+---------+-------+------------------------------------------------------------------------------------------------------------------------------------------------+------------+----------+-----------
 color_check  | c    | {color} | -     | (color > 0)                                                                                                                                    | f          | f        | t
 constraint_1 | c    | {time}  | -     | (("time" >= 'Wed Dec 28 16:00:00 2016 PST'::timestamp with time zone) AND ("time" < 'Wed Jan 04 16:00:00 2017 PST'::timestamp with time zone)) | f          | f        | t
(2 rows)

ALTER TABLE disttable DROP CONSTRAINT color_check;
SELECT * FROM test.show_constraints('disttable');
 Constraint | Type | Columns | Index | Expr | Deferrable | Deferred | Validated 
------------+------+---------+-------+------+------------+----------+-----------
(0 rows)

SELECT * FROM test.show_constraints('_timescaledb_internal._hyper_15_1_dist_chunk');
  Constraint  | Type | Columns | Index |                                                                      Expr                                                                      | Deferrable | Deferred | Validated 
--------------+------+---------+-------+------------------------------------------------------------------------------------------------------------------------------------------------+------------+----------+-----------
 constraint_1 | c    | {time}  | -     | (("time" >= 'Wed Dec 28 16:00:00 2016 PST'::timestamp with time zone) AND ("time" < 'Wed Jan 04 16:00:00 2017 PST'::timestamp with time zone)) | f          | f        | t
(1 row)

SELECT * FROM test.remote_exec(NULL, $$
SELECT show_chunks('disttable');
SELECT * FROM test.show_constraints('disttable');
SELECT * FROM test.show_constraints('_timescaledb_internal._hyper_15_1_dist_chunk');
$$);
NOTICE:  [data_node_1]: 
SELECT show_chunks('disttable')
NOTICE:  [data_node_1]:
show_chunks                                 
--------------------------------------------
_timescaledb_internal._hyper_15_1_dist_chunk
(1 row)


NOTICE:  [data_node_1]: 
SELECT * FROM test.show_constraints('disttable')
NOTICE:  [data_node_1]:
Constraint|Type|Columns|Index|Expr|Deferrable|Deferred|Validated
----------+----+-------+-----+----+----------+--------+---------
(0 rows)


NOTICE:  [data_node_1]: 
SELECT * FROM test.show_constraints('_timescaledb_internal._hyper_15_1_dist_chunk')
NOTICE:  [data_node_1]:
Constraint  |Type|Columns|Index|Expr                                                                                                                                          |Deferrable|Deferred|Validated
------------+----+-------+-----+----------------------------------------------------------------------------------------------------------------------------------------------+----------+--------+---------
constraint_1|c   |{time} |-    |(("time" >= 'Wed Dec 28 16:00:00 2016 PST'::timestamp with time zone) AND ("time" < 'Wed Jan 04 16:00:00 2017 PST'::timestamp with time zone))|f         |f       |t        
(1 row)


NOTICE:  [data_node_2]: 
SELECT show_chunks('disttable')
NOTICE:  [data_node_2]:
show_chunks                                 
--------------------------------------------
_timescaledb_internal._hyper_15_1_dist_chunk
(1 row)


NOTICE:  [data_node_2]: 
SELECT * FROM test.show_constraints('disttable')
NOTICE:  [data_node_2]:
Constraint|Type|Columns|Index|Expr|Deferrable|Deferred|Validated
----------+----+-------+-----+----+----------+--------+---------
(0 rows)


NOTICE:  [data_node_2]: 
SELECT * FROM test.show_constraints('_timescaledb_internal._hyper_15_1_dist_chunk')
NOTICE:  [data_node_2]:
Constraint  |Type|Columns|Index|Expr                                                                                                                                          |Deferrable|Deferred|Validated
------------+----+-------+-----+----------------------------------------------------------------------------------------------------------------------------------------------+----------+--------+---------
constraint_1|c   |{time} |-    |(("time" >= 'Wed Dec 28 16:00:00 2016 PST'::timestamp with time zone) AND ("time" < 'Wed Jan 04 16:00:00 2017 PST'::timestamp with time zone))|f         |f       |t        
(1 row)


NOTICE:  [data_node_3]: 
SELECT show_chunks('disttable')
NOTICE:  [data_node_3]:
show_chunks                                 
--------------------------------------------
_timescaledb_internal._hyper_15_1_dist_chunk
(1 row)


NOTICE:  [data_node_3]: 
SELECT * FROM test.show_constraints('disttable')
NOTICE:  [data_node_3]:
Constraint|Type|Columns|Index|Expr|Deferrable|Deferred|Validated
----------+----+-------+-----+----+----------+--------+---------
(0 rows)


NOTICE:  [data_node_3]: 
SELECT * FROM test.show_constraints('_timescaledb_internal._hyper_15_1_dist_chunk')
NOTICE:  [data_node_3]:
Constraint  |Type|Columns|Index|Expr                                                                                                                                          |Deferrable|Deferred|Validated
------------+----+-------+-----+----------------------------------------------------------------------------------------------------------------------------------------------+----------+--------+---------
constraint_1|c   |{time} |-    |(("time" >= 'Wed Dec 28 16:00:00 2016 PST'::timestamp with time zone) AND ("time" < 'Wed Jan 04 16:00:00 2017 PST'::timestamp with time zone))|f         |f       |t        
(1 row)


 remote_exec 
-------------
 
(1 row)

DROP TABLE disttable;
-- Test event triggers behaviour
CREATE OR REPLACE FUNCTION test_event_trigger_sql_drop_function() RETURNS event_trigger
LANGUAGE plpgsql AS $$
BEGIN
    EXECUTE 'DROP TABLE IF EXISTS unexist_table';
END
$$;
\c :TEST_DBNAME :ROLE_SUPERUSER;
CREATE EVENT TRIGGER test_event_trigger_sqldrop ON sql_drop
    WHEN TAG IN ('drop table')
    EXECUTE PROCEDURE test_event_trigger_sql_drop_function();
SET ROLE :ROLE_DEFAULT_CLUSTER_USER;
-- Test DROP inside event trigger on local table (should not crash)
CREATE TABLE non_htable (id int PRIMARY KEY);
DROP TABLE non_htable;
NOTICE:  table "unexist_table" does not exist, skipping
\c :TEST_DBNAME :ROLE_SUPERUSER;
DROP EVENT TRIGGER test_event_trigger_sqldrop;
SET ROLE :ROLE_DEFAULT_CLUSTER_USER;
-- Test DDL blocking from non-frontend session
--
-- We test only special corner cases since most of this functionality already
-- been tested before.
--
CREATE TABLE disttable(time timestamptz, device int);
SELECT * FROM create_hypertable('disttable', 'time', replication_factor => 3);
NOTICE:  adding not-null constraint to column "time"
 hypertable_id | schema_name | table_name | created 
---------------+-------------+------------+---------
            16 | public      | disttable  | t
(1 row)

CREATE INDEX disttable_device_idx ON disttable (device);
\c data_node_1
SELECT schemaname, tablename FROM pg_tables WHERE tablename = 'disttable';
 schemaname | tablename 
------------+-----------
 public     | disttable
(1 row)

SELECT * FROM test.show_indexes('disttable');
        Index         | Columns  | Expr | Unique | Primary | Exclusion | Tablespace 
----------------------+----------+------+--------+---------+-----------+------------
 disttable_device_idx | {device} |      | f      | f       | f         | 
 disttable_time_idx   | {time}   |      | f      | f       | f         | 
(2 rows)

\set ON_ERROR_STOP 0
-- Test ALTER by non-frontend session
ALTER TABLE disttable ADD CONSTRAINT device_check CHECK (device > 0);
ERROR:  operation is blocked on a distributed hypertable member
-- Test path for delayed relid resolving
ALTER TABLE disttable RENAME TO disttable2;
ERROR:  operation is blocked on a distributed hypertable member
-- Test for multiple hypertables
TRUNCATE disttable, disttable;
ERROR:  operation is blocked on a distributed hypertable member
-- Test for hypertables collected during drop
DROP INDEX disttable_device_idx;
ERROR:  operation is blocked on a distributed hypertable member
DROP TABLE disttable;
ERROR:  operation is blocked on a distributed hypertable member
\set ON_ERROR_STOP 1
-- Explicitly allow execution
SET timescaledb.enable_client_ddl_on_data_nodes TO true;
DROP INDEX disttable_device_idx;
SELECT * FROM test.show_indexes('disttable');
       Index        | Columns | Expr | Unique | Primary | Exclusion | Tablespace 
--------------------+---------+------+--------+---------+-----------+------------
 disttable_time_idx | {time}  |      | f      | f       | f         | 
(1 row)

\c :TEST_DBNAME :ROLE_SUPERUSER;
SET ROLE :ROLE_DEFAULT_CLUSTER_USER;
-- Should fail because of the inconsistency
\set ON_ERROR_STOP 0
DROP INDEX disttable_device_idx;
ERROR:  [data_node_1]: index "disttable_device_idx" does not exist
\set ON_ERROR_STOP 1
DROP TABLE disttable;
-- cleanup
\c :TEST_DBNAME :ROLE_SUPERUSER;
DROP SCHEMA disttable_schema CASCADE;
NOTICE:  drop cascades to table disttable_schema.disttable
DROP DATABASE data_node_1;
DROP DATABASE data_node_2;
DROP DATABASE data_node_3;
